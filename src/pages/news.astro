---
import { Image } from "astro:assets";
import Layout from "../layouts/Layout.astro";
import { useTranslations } from "../libs/i18n";
import { Icon } from "astro-icon/components";

const { t, l, getCollection } = useTranslations(Astro.url);

const newsItems = await getCollection("news");

// カテゴリの定義
const categories = [
    { id: "all", name: { ja: "すべて", en: "All", zh: "全部", ko: "전체" } },
    { id: "event", name: { ja: "イベント", en: "Events", zh: "活动", ko: "이벤트" } },
    { id: "education", name: { ja: "教育", en: "Education", zh: "教育", ko: "교육" } },
    { id: "collaboration", name: { ja: "連携", en: "Collaboration", zh: "合作", ko: "협력" } },
];
---

<Layout
    title={t({
        ja: "ニュース",
        en: "News",
        zh: "新闻",
        ko: "뉴스",
    })}
    description={t({
        ja: "OUS Metaverseの最新ニュースをお届けします。イベント情報やプロジェクト発表など、サークルの最新情報を確認できます。",
        en: "Delivering the latest news from OUS Metaverse. Check the latest information about the circle, including event information and project announcements.",
        zh: "传递OUS Metaverse的最新消息。查看有关社团的最新信息，包括活动信息和项目公告。",
        ko: "OUS Metaverse의 최신 뉴스를 제공합니다. 이벤트 정보와 프로젝트 발표 등 서클의 최신 정보를 확인하세요.",
    })}
>
    <main>
        {/* Hero Section */}
        <div class="hero from-base-200 to-base-100 bg-gradient-to-b py-20">
            <div class="hero-content text-center">
                <div>
                    <h1 class="text-4xl font-bold md:text-5xl">
                        {
                            t({
                                ja: "ニュース",
                                en: "News",
                                zh: "新闻",
                                ko: "뉴스",
                            })
                        }
                    </h1>
                    <p class="max-w-3xl py-6 text-lg">
                        {
                            t({
                                ja: "OUS Metaverseの最新情報をお届けします。イベントやプロジェクト、メンバー募集など、サークルの活動に関する情報をチェックしてください。",
                                en: "We deliver the latest information from OUS Metaverse. Please check information about circle activities such as events, projects, and member recruitment.",
                                zh: "我们传递OUS Metaverse的最新信息。请查看有关社团活动的信息，如活动、项目和成员招募。",
                                ko: "OUS Metaverse의 최신 정보를 제공합니다. 이벤트, 프로젝트, 멤버 모집 등 서클 활동에 대한 정보를 확인하세요.",
                            })
                        }
                    </p>
                </div>
            </div>
        </div>

        {/* News List Section */}
        <div class="container mx-auto px-4" id="news-list" data-category="all">
            {/* Category Filter */}
            <form id="category-filter">
				{/* Mobile */}
                <div class="mb-12 flex justify-center md:hidden">
                    <select class="select select-bordered w-full max-w-xs" name="category">
                        {
                            categories.map((category) => (
                                <option value={category.id}>{t(category.name)}</option>
                            ))
                        }
                    </select>
                </div>

				{/* Desktop */}
                <div class="join mb-12 hidden justify-center md:flex">
                    {
                        categories.map((category) => (
                            <input
                                class="join-item btn category-filter"
                                type="radio"
                                name="category"
                                checked={category.id === "all"}
                                aria-label={t(category.name)}
                                value={category.id}
                            />
                        ))
                    }
                </div>
            </form>

			{/* Featured News */}
			<div class="mb-16">
				<h2 class="mb-8 text-2xl font-bold">
					{t({
						ja: "注目のニュース",
						en: "Featured News",
						zh: "精选新闻",
						ko: "주목할 뉴스",
					})}
				</h2>

				<div class="grid gap-8 lg:grid-cols-2">
					{
						newsItems
							.slice(0, 2)
							.map((news) => (
						<a 
							href={l(`/news/${news.slug}`)}
							class="card bg-base-100 news-card hidden shadow-xl"
							data-category={news.data.category}
						>
							<figure>
								<Image
									src={news.data.image}
									alt={news.data.title}
									class="h-full w-full object-cover"
								/>
							</figure>
							<div class="card-body">
								<div class="mb-3 flex items-center justify-between">
									<span class="badge badge-primary">
										{t(
											categories.find(
												(cat) => cat.id === news.data.category
											)?.name || { ja: "", en: "", zh: "", ko: "" }
										)}
									</span>
									<span class="text-sm opacity-70">
										{news.data.date.toLocaleDateString(
											Astro.currentLocale || "ja-JP",
											{
												year: "numeric",
												month: "long",
												day: "numeric",
											}
										)}
									</span>
								</div>
								<h3 class="card-title">{news.data.title}</h3>
								<p>{news.data.summary}</p>
								<div class="card-actions mt-4 justify-end">
									<button class="btn btn-primary btn-sm">
										{t({
											ja: "詳細を見る",
											en: "Read More",
											zh: "阅读更多",
											ko: "자세히 보기",
										})}
										<Icon name="mdi:arrow-right" class="ml-1 h-4 w-4" />
									</button>
								</div>
							</div>
						</a>
					))}
				</div>
			</div>

			{/* All News */}
            <h2 class="mb-8 text-2xl font-bold">
                {
                    t({
                        ja: "すべてのニュース",
                        en: "All News",
                        zh: "所有新闻",
                        ko: "모든 뉴스",
                    })
                }
            </h2>

            <div class="mb-16 grid gap-8 sm:grid-cols-2 lg:grid-cols-3">
                {
                    newsItems.map((news) => (
                        <div
                            class="card bg-base-100 news-card hidden shadow-md hover:shadow-lg"
                            data-category={news.data.category}
                        >
                            <figure>
                                <Image
                                    src={news.data.image}
                                    alt={news.data.title}
                                    class="h-full w-full object-cover"
                                />
                            </figure>
                            <div class="card-body p-4">
                                <div class="mb-2 flex items-center justify-between">
                                    <span class="badge badge-sm badge-primary">
                                        {t(
                                            categories.find((cat) => cat.id === news.data.category)
                                                ?.name || { ja: "", en: "", zh: "", ko: "" }
                                        )}
                                    </span>
                                    <span class="text-xs opacity-70">
                                        {news.data.date.toLocaleDateString(
                                            Astro.currentLocale || "ja-JP",
                                            {
                                                year: "numeric",
                                                month: "long",
                                                day: "numeric",
                                            }
                                        )}
                                    </span>
                                </div>
                                <h3 class="card-title text-base">{news.data.title}</h3>
                                <p class="line-clamp-2 text-sm opacity-80">
                                    {news.data.summary}
                                </p>
                                <div class="card-actions mt-2 justify-end">
                                    <a
                                        href={l(`/news/${news.slug}`)}
                                        class="btn btn-sm btn-link"
                                    >
                                        {t({
                                            ja: "詳細",
                                            en: "Details",
                                            zh: "详情",
                                            ko: "상세",
                                        })}
                                    </a>
                                </div>
                            </div>
                        </div>
                    ))
                }
            </div>
        </div>
        <script>
            const categoryFilter = document.getElementById("category-filter") as HTMLFormElement;
            const newsList = document.getElementById("news-list")!;

            categoryFilter.addEventListener("change", (event) => {
                const selectedCategory = (event.target as HTMLInputElement).value;
                newsList.dataset.category = selectedCategory;
            });
        </script>
    </main>
</Layout>

<style>
    [data-category="all"] .news-card {
        display: block;
    }
    [data-category="event"] .news-card[data-category="event"] {
        display: block;
    }
    [data-category="education"] .news-card[data-category="education"] {
        display: block;
    }
    [data-category="collaboration"] .news-card[data-category="collaboration"] {
        display: block;
    }
</style>
